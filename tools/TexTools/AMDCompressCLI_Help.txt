--------------------------------------
AMDCompressCLI V2.0 Copyright AMD 2015
--------------------------------------

Usage: AMDCompressCLI.exe [options] SourceFile DestFile

MipMap options:

-nomipmap                 Turns off Mipmap generation
-mipsize    <size>        The size in pixels used to determine
                          how many mip levels to generate
-miplevels  <Level>       Sets Mips Level for output,
                          (mipSize overides this option): default is 1
Compression options:

-fs <format>    Optionally specifies the source texture format to use
-fd <format>    Specifies the destination texture format to use

The following is a list of channel formats
ARGB_16        ARGB format with 16-bit fixed channels
ARGB_16F       ARGB format with 16-bit floating-point channels
ARGB_32F       ARGB format with 32-bit floating-point channels
ARGB_2101010   ARGB format with 10-bit fixed channels for color
               and a 2-bit fixed channel for alpha
ARGB_8888      ARGB format with 8-bit fixed channels
R_8            Single component format with 8-bit fixed channels
R_16           Single component format with 16-bit fixed channels
R_16F          Two component format with 32-bit floating-point channels
R_32F          Single component with 32-bit floating-point channels
RG_8           Two component format with 8-bit fixed channels
RG_16          Two component format with 16-bit fixed channels
RG_16F         Two component format with 16-bit floating-point channels
RG_32F         Two component format with 32-bit floating-point channels
RGB_888        RGB format with 8-bit fixed channels

The following is a list of compression formats
ATI1N          Single component compression format using the same
               technique as DXT5 alpha. Four bits per pixel
ATI2N          Two component compression format using the same
               technique as DXT5 alpha. Designed for compression object
               space normal maps. Eight bits per pixel
ATI2N_XY       Two component compression format using the same technique
               as DXT5 alpha. The same as ATI2N but with the channels swizzled.
               Eight bits per pixel
ATI2N_DXT5     An ATI2N like format using DXT5. Intended for use on GPUs that
               do not natively support ATI2N. Eight bits per pixel
BC1            Four component opaque (or 1-bit alpha) compressed texture
               format. Four bit per pixel
BC2            Four component compressed texture format with explicit
               alpha.  Eight bits per pixel
BC3            Four component compressed texture format with interpolated
               alpha.  Eight bits per pixel
BC4            Single component compressed texture format for Microsoft
BC5            Two component compressed texture format for Microsoft
BC6H           High-Dynamic Range  compression format
BC7            High-quality compression of RGB and RGBA data

DXT1           An opaque (or 1-bit alpha) DXTC compressed texture format.
               Four bits per pixel
DXT3           DXTC compressed texture format with explicit alpha.
               Eight bits per pixel
DXT5           DXTC compressed texture format with interpolated alpha.
               Eight bits per pixel
DXT5_xGBR      DXT5 with the red component swizzled into the alpha channel.
               Eight bits per pixel
DXT5_RxBG      Swizzled DXT5 format with the green component swizzled
               into the alpha channel. Eight bits per pixel
DXT5_RBxG      Swizzled DXT5 format with the green component swizzled
               into the alpha channel & the blue component swizzled into
               the green channel. Eight bits per pixel
DXT5_xRBG      Swizzled DXT5 format with the green component swizzled
               into the alpha channel & the red component swizzled into the
               green channel. Eight bits per pixel
DXT5_RGxB      Swizzled DXT5 format with the blue component swizzled
               into the alpha channel. Eight bits per pixel
DXT5_xGxR      Two-component swizzled DXT5 format with the red component
               swizzled into the alpha channel & the green component in the
               green channel. Eight bits per pixel
ETC_RGB        Ericsson Texture Compression - Compressed RGB format.

<codec options>: Reference  documentation for range of values

-UseChannelWeighting <value> Use channel weightings
-WeightR <value>             The weighting of the Red or X Channel
-WeightG <value>             The weighting of the Green or Y Channel
-WeightB <value>             The weighting of the Blue or Z Channel
-AlphaThreshold <value>      Adapt weighting on a per-block basis
-DXT1UseAlpha <value>        Encode single-bit alpha data.
                             Only valid when compressing to DXT1 & BC1
-AlphaThreshold <value>      The alpha threshold to use when compressing
                             to DXT1 & BC1 with DXT1UseAlpha
                             Texels with an alpha value less than the threshold
                             are treated as transparent
-CompressionSpeed <value>    The trade-off between compression speed & quality
                             This setting is not used in BC6H and BC7
-Signed <value>              Used for BC6H only, Default BC6H format disables
                             use of a sign bit in the 16-bit floating point
                             channels, with a value set to 1 BC6H format will
                             use a sign bit
-NumThreads <value>          Number of threads to initialize for BC6H or BC7
                             encoding (Max up to 128). Default set to 8
-Quality <value>             Sets quality of encoding for BC7
-Performance <value>         Sets performance of encoding for BC7
-ColourRestrict <value>      This setting is a quality tuning setting for BC7
                             which may be necessary for convenience in some
                             applications
-AlphaRestrict <value>       This setting is a quality tuning setting for BC7
                             which may be necessary for some textures
-ModeMask <value>            Mode to set BC7 to encode blocks using any of 8
                             different block modes in order to obtain the
                             highest quality


Output options:

-silent                      Disable print messages
-performance                 Shows various performance stats
-noprogress                  Disables showing of compression progress messages


Example usage:

AMDCompressCLI.exe -fd BC7  image.bmp result.bmp
AMDCompressCLI.exe -fd BC7  -NumTheads 16 image.bmp result.dds
AMDCompressCLI.exe -fd BC7  image.dds result.bmp
AMDCompressCLI.exe -fd BC6H image.exr result.exr
